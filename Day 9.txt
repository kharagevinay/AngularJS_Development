Ex. 17.	Display student details with different format using ng-switch (Radio Button).

		<html>
			<head>
				<style type="text/css">
					h3{
						text-align: center;
						padding: 20px;
						font-size: 30px;
						background-color: lightblue;
						color: white;
						margin: 0;
					}
					.c1{
						background-color: blue;
						color: white;
						margin: 0px;
					}
					.c2{
						color: blue;
					}
					.c3{
						border:2px solid blue;
						margin: 5px;
						width: 130px;
						height: 70px;
						padding: 0px;
						float: left;
						text-align: center;
						font-size: 20px;
					}
					li{
						background-color: yellow;
						padding: 20px;
						margin: 10px;
						color: red;
						font-size: 20px;
					}
					ol li:hover{
						background-color: green;
						color: black;
						cursor: pointer;
					}
					table , th , td{
					border: none;
					text-align: center;
					padding: 10px;
					font-size: 25px;
					}
					table{
						width: 100%;
					}
					th{
						background-color: #214328;
						color: white;
					}
					tr:nth-child(even){
						background-color: #4CAF50;
						color: white;
					}
					tr:nth-child(odd){
						background-color: #54b275;
						color: white;
					}
					th , td{
						border-radius: 50px;
					}
					td:hover{
						background-color: lightgreen;
						color: black;
						cursor: pointer;
					}
				</style>
			</head>
			<body ng-app="myApp">
				<h3>Controllers In Angular JS</h3>
					<hr>
						<div ng-controller="demoController">
							Select Display Mode :-
							
							<input type="Radio" name="rad" value="List" ng-model="x">List
							<input type="Radio" name="rad" value="Table" ng-model="x">Table
							<input type="Radio" name="rad" value="Custom" ng-model="x">Custom

							<div ng-switch="x">
								<ol ng-switch-when="List">
									<li ng-repeat="item in stud">
										Mr./Mrs. {{item.sname}} joined in {{item.course}} course.
									</li>
								</ol>

								<table border="2" ng-switch-when="Table">
									<tr>
										<th>Student Name</th>
										<th>Course Name</th>
									</tr>
									<tr ng-repeat="item in stud">
										<td>{{item.sname}}</td>
										<td>{{item.course}}</td>
									</tr>
								</table>

							<div class="c3" ng-repeat="item in stud" ng-switch-when="Custom">
								<p class="c1">
									{{item.sname}}
								</p>
								<span class="c2">{{item.course}}</span>
							</div>
						</div>
					</div>			
					<script type="text/javascript" src="angular.js"></script>
					<script type="text/javascript">
						var app = angular.module("myApp",[]);
						app.controller("demoController",function($scope)
						{
							$scope.x="List";	
							$scope.stud = [ {sname : "Scott", course : "Angular JS"},{sname : "Smith", course : "HTML5"},{sname : "Sham", course : "CSS3"},{sname : "Amit", course : "Bootstrap"},{sname : "Nayan", course : "jQuery"},{sname : "Scott", course : "Angular JS"},{sname : "Smith", course : "HTML5"},{sname : "Sham", course : "CSS3"},{sname : "Amit", course : "Bootstrap"},{sname : "Nayan", course : "jQuery"},{sname : "Scott", course : "Angular JS"},{sname : "Smith", course : "HTML5"},{sname : "Sham", course : "CSS3"},{sname : "Amit", course : "Bootstrap"},{sname : "Nayan", course : "jQuery"},{sname : "Scott", course : "Angular JS"},{sname : "Smith", course : "HTML5"},{sname : "Sham", course : "CSS3"},{sname : "Amit", course : "Bootstrap"},{sname : "Nayan", course : "jQuery"},{sname : "Scott", course : "Angular JS"},{sname : "Smith", course : "HTML5"},{sname : "Sham", course : "CSS3"},{sname : "Amit", course : "Bootstrap"},{sname : "Nayan", course : "jQuery"},{sname : "Scott", course : "Angular JS"},{sname : "Smith", course : "HTML5"},{sname : "Sham", course : "CSS3"},{sname : "Amit", course : "Bootstrap"},{sname : "Nayan", course : "jQuery"} ];	
						});
					</script>
			</body>
		</html>
		
-----------------------------------------------------------------------------------

16. Filters in AJS.

Ans :- 

		AJS filters are used to format the data that we want to display to user.
		
		Filters are be applied at client side in AJS.
		
		No need to communicate with server to implement filters. So that user we can quick results.
		
		By using filters we can perform the following operations :-
		
			Format the data.
			
			Filters the items based on search strings.
			
			Sorting the items.
			
--------------------------------------------------------------------------------------

17. Pre-defined Filters.

Ans :-

		AJS provieds serveral built-in filters to perform above operations.
		
		Use the following operations to implement filters:-
		
			1.	lowercase
			
			2.	uppercase
			
			3.	currency
			
			4.	orderBy
			
			5.	filter
			
			6.	limitTo
			
----------------------------------------------------------------------------------

Note :-

		Filters does not modify the original data, it generates formatted results.
		
		"orderBy", "filter" and "limitTo" options are applicable on collections (Arrays).

---------------------------------------------------------------------------------------

18. How to apply filter options?

Ans :-

		All the filter options are attached to variables / collections using pipe(|) symbol.
		
		Eg. :-

				{{ pname | uppercase }}

				{{ item.ename | lowercase }}
				
				ng-repeat = "item in ar | orderBy"
				
------------------------------------------------------------------------------------

Ex. 18. Display product details using AJS Filters.

		<html>
			<head>
				<style type="text/css">
					h3{
						text-align: center;
						padding: 20px;
						font-size: 30px;
						background-color: lightblue;
						color: white;
						margin: 0;
					}
					p{
						text-align: center;
						padding: 1px;
						font-size: 30px;
						background-color: orange;
						color: white;
						margin: 0;
					}
				</style>
			</head>
			<body ng-app="myApp">
				<h3>Controllers In Angular JS</h3>
					<hr>
					<div ng-controller="demoController">
						<p>With Filter</p>
						<br>
							Product Id :- {{pid}}<br>
							Product Name :- {{pname | uppercase}}<br>
							Brand Name :- {{brand | lowercase}}<br>
							Product Price :- {{price | currency:"RS."}}<br>
							<hr>
							<p>Without Filter</p>
							<br>
							Product Id :- {{pid}}<br>
							Product Name :- {{pname}}<br>
							Brand Name :- {{brand}}<br>
							Product Price :- {{price}}<br>				
					</div>
					<script type="text/javascript" src="angular.js"></script>
					<script type="text/javascript">
						var app = angular.module("myApp",[]);
						app.controller("demoController",function($scope)
						{
							$scope.pid = 1025;
							$scope.pname = "Sony E1000";
							$scope.brand = "SonY";
							$scope.price = 18999;
						});
					</script>
			</body>
		</html>
		
-------------------------------------------------------------------------------------

Ex. 19. Example to perform sorting using orderBy.

		<html>
			<head>
				<style type="text/css">
					h3{
						text-align: center;
						padding: 20px;
						font-size: 30px;
						background-color: lightblue;
						color: white;
						margin: 0;
					}
					table , th , td{
					border: none;
					text-align: center;
					padding: 10px;
					font-size: 25px;
					}
					table{
						width: 100%;
					}
					th{
						background-color: #214328;
						color: white;
					}
					tr:nth-child(even){
						background-color: #4CAF50;
						color: white;
					}
					tr:nth-child(odd){
						background-color: #54b275;
						color: white;
					}
					th , td{
						border-radius: 50px;
					}
					td:hover{
						background-color: lightgreen;
						color: black;
						cursor: pointer;
					}
					span{
						font-size: 30px;
					}
					input[type='checkbox']{
						height: 20px;
						width:50px;
					}
					select{
						height: 30px;
						width:150px;
					}
				</style>
			</head>
			<body ng-app="myApp">
				<h3>Controllers In Angular JS</h3>
					<hr>
					<div ng-controller="demoController">
						<span>Select Sort Property : -</span>
							<select ng-model="x">
								<option value="" disabled="disabled">Select Option</option>		
								<option>sname</option>
								<option>course</option>
							</select>		
							<br><br><br>
							<span>Do you want to decending order?</span>
							<input type="checkbox" name="" ng-model="y">
							<br><br><br>
							<table border="2">
								<tr>
									<th>Student Name</th>
									<th>Course Name</th>
								</tr>
								<tr ng-repeat="item in ar | orderBy : x : y">
									<td>{{item.sname}}</td>
									<td>{{item.course}}</td>
								</tr>
							</table></div>
					<script type="text/javascript" src="angular.js"></script>
					<script type="text/javascript">
						var app = angular.module("myApp",[]);
						app.controller("demoController",function($scope)
						{
							$scope.ar = [{sname:"Smith",course:"AJS"},
										{sname:"Amit",course:"HTML"},
										{sname:"Zuber",course:"AJS"},
										{sname:"Ram",course:"CSS"}];
						});
					</script>
			</body>
		</html>

------------------------------------------------------------------------------------

Ex. 20. Example to perform sorting using orderBy. (using hyperlink)

		<html>
			<head>
				<style type="text/css">
					h3{
						text-align: center;
						padding: 20px;
						font-size: 30px;
						background-color: lightblue;
						color: white;
						margin: 0;
					}
					h3{
						text-align: center;
						padding: 20px;
						font-size: 30px;
						background-color: lightblue;
						color: white;
						margin: 0;
					}
					.c1{
						background-color: blue;
						color: white;
						margin: 0px;
					}
					.c2{
						color: blue;
					}
					.c3{
						border:2px solid blue;
						margin: 5px;
						width: 130px;
						height: 70px;
						padding: 0px;
						float: left;
						text-align: center;
						font-size: 20px;
					}
					li{
						background-color: yellow;
						padding: 20px;
						margin: 10px;
						color: red;
						font-size: 20px;
					}
					ol li:hover{
						background-color: green;
						color: black;
						cursor: pointer;
					}
					table , th , td{
					border: none;
					text-align: center;
					padding: 10px;
					font-size: 25px;
					}
					table{
						width: 100%;
					}
					th{
						background-color: green;
						color: white;
					}
					tr:nth-child(even){
						background-color: #4CAF50;
						color: white;
					}
					tr:nth-child(odd){
						background-color: #54b275;
						color: white;
					}
					th , td{
						border-radius: 50px;
					}
					td:hover{
						background-color: lightgreen;
						color: black;
						cursor: pointer;
					}
				</style>
			</head>
			<body ng-app="myApp">
				<h3>Controllers In Angular JS</h3>
					<hr>
					<div ng-controller="demoController">
						
							<table border="2">
								<tr>
									<th><a href="#" ng-click="x = 'sname'; y = !y;">Student Name</a></th>
									<th><a href="#" ng-click="x = 'course'; y = !y;">Course Name</a></th>
								</tr>
								<tr ng-repeat="item in ar | orderBy : x : y">
									<td>{{item.sname}}</td>
									<td>{{item.course}}</td>
								</tr>
							</table></div>
					<script type="text/javascript" src="angular.js"></script>
					<script type="text/javascript">
						var app = angular.module("myApp",[]);
						app.controller("demoController",function($scope)
						{
							$scope.ar = [{sname:"Smith",course:"AJS"},
										{sname:"Amit",course:"HTML"},
										{sname:"Zuber",course:"AJS"},
										{sname:"Ram",course:"CSS"}];
						});
					</script>
			</body>
		</html>
		
----------------------------------------------------------------------------------------


